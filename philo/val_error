==860472== Helgrind, a thread error detector
==860472== Copyright (C) 2007-2024, and GNU GPL'd, by OpenWorks LLP et al.
==860472== Using Valgrind-3.25.1 and LibVEX; rerun with -h for copyright info
==860472== Command: ./philo 199 800 200 200 3
==860472== 
==860472== ---Thread-Announcement------------------------------------------
==860472== 
==860472== Thread #3 was created
==860472==    at 0x49A19F3: clone (clone.S:76)
==860472==    by 0x49A28EE: __clone_internal (clone-internal.c:83)
==860472==    by 0x49106D8: create_thread (pthread_create.c:295)
==860472==    by 0x49111FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==860472==    by 0x485744E: pthread_create_WRK (hg_intercepts.c:449)
==860472==    by 0x4858D49: pthread_create@* (hg_intercepts.c:482)
==860472==    by 0x401D16: ph_start_philo (philo.c:79)
==860472==    by 0x401362: main (main.c:35)
==860472== 
==860472== ---Thread-Announcement------------------------------------------
==860472== 
==860472== Thread #2 was created
==860472==    at 0x49A19F3: clone (clone.S:76)
==860472==    by 0x49A28EE: __clone_internal (clone-internal.c:83)
==860472==    by 0x49106D8: create_thread (pthread_create.c:295)
==860472==    by 0x49111FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==860472==    by 0x485744E: pthread_create_WRK (hg_intercepts.c:449)
==860472==    by 0x4858D49: pthread_create@* (hg_intercepts.c:482)
==860472==    by 0x401CCE: ph_start_philo (philo.c:74)
==860472==    by 0x401362: main (main.c:35)
==860472== 
==860472== ---Thread-Announcement------------------------------------------
==860472== 
==860472== Thread #1 is the program's root thread
==860472== 
==860472== ----------------------------------------------------------------
==860472== 
==860472==  Lock at 0x4AA86F0 was first observed
==860472==    at 0x48590A7: pthread_mutex_init (hg_intercepts.c:822)
==860472==    by 0x4018AA: make_philo (init_philo.c:23)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Address 0x4aa86f0 is 48 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472==  Lock at 0x4AA87A0 was first observed
==860472==    at 0x48590A7: pthread_mutex_init (hg_intercepts.c:822)
==860472==    by 0x4018AA: make_philo (init_philo.c:23)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Address 0x4aa87a0 is 48 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472== Possible data race during write of size 4 at 0x4AA86E0 by thread #3
==860472== Locks held: 2, at addresses 0x4AA86F0 0x4AA87A0
==860472==    at 0x402037: ph_eat (actions.c:60)
==860472==    by 0x401EF0: ph_think (actions.c:47)
==860472==    by 0x4021C5: ph_thread (actions.c:83)
==860472==    by 0x4857646: mythread_wrapper (hg_intercepts.c:410)
==860472==    by 0x4910AC2: start_thread (pthread_create.c:442)
==860472==    by 0x49A1A03: clone (clone.S:100)
==860472== 
==860472== This conflicts with a previous read of size 4 by thread #2
==860472== Locks held: none
==860472==    at 0x401A80: ph_max_eat (philo.c:23)
==860472==    by 0x401AF7: ph_monitoring (philo.c:38)
==860472==    by 0x4857646: mythread_wrapper (hg_intercepts.c:410)
==860472==    by 0x4910AC2: start_thread (pthread_create.c:442)
==860472==    by 0x49A1A03: clone (clone.S:100)
==860472==  Address 0x4aa86e0 is 32 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472== ----------------------------------------------------------------
==860472== 
==860472==  Lock at 0x4AA86F0 was first observed
==860472==    at 0x48590A7: pthread_mutex_init (hg_intercepts.c:822)
==860472==    by 0x4018AA: make_philo (init_philo.c:23)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Address 0x4aa86f0 is 48 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472==  Lock at 0x4AA87A0 was first observed
==860472==    at 0x48590A7: pthread_mutex_init (hg_intercepts.c:822)
==860472==    by 0x4018AA: make_philo (init_philo.c:23)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Address 0x4aa87a0 is 48 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472== Possible data race during read of size 4 at 0x4AA86E0 by thread #2
==860472== Locks held: none
==860472==    at 0x401A80: ph_max_eat (philo.c:23)
==860472==    by 0x401AF7: ph_monitoring (philo.c:38)
==860472==    by 0x4857646: mythread_wrapper (hg_intercepts.c:410)
==860472==    by 0x4910AC2: start_thread (pthread_create.c:442)
==860472==    by 0x49A1A03: clone (clone.S:100)
==860472== 
==860472== This conflicts with a previous write of size 4 by thread #3
==860472== Locks held: 2, at addresses 0x4AA86F0 0x4AA87A0
==860472==    at 0x402037: ph_eat (actions.c:60)
==860472==    by 0x401EF0: ph_think (actions.c:47)
==860472==    by 0x4021C5: ph_thread (actions.c:83)
==860472==    by 0x4857646: mythread_wrapper (hg_intercepts.c:410)
==860472==    by 0x4910AC2: start_thread (pthread_create.c:442)
==860472==    by 0x49A1A03: clone (clone.S:100)
==860472==  Address 0x4aa86e0 is 32 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472== ----------------------------------------------------------------
==860472== 
==860472==  Lock at 0x4AA86F0 was first observed
==860472==    at 0x48590A7: pthread_mutex_init (hg_intercepts.c:822)
==860472==    by 0x4018AA: make_philo (init_philo.c:23)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Address 0x4aa86f0 is 48 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472==  Lock at 0x4AA87A0 was first observed
==860472==    at 0x48590A7: pthread_mutex_init (hg_intercepts.c:822)
==860472==    by 0x4018AA: make_philo (init_philo.c:23)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Address 0x4aa87a0 is 48 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472== Possible data race during write of size 4 at 0x4AA86E0 by thread #3
==860472== Locks held: 2, at addresses 0x4AA86F0 0x4AA87A0
==860472==    at 0x402037: ph_eat (actions.c:60)
==860472==    by 0x401EF0: ph_think (actions.c:47)
==860472==    by 0x401E53: ph_sleep (actions.c:32)
==860472==    by 0x402145: ph_eat (actions.c:69)
==860472==    by 0x401EF0: ph_think (actions.c:47)
==860472==    by 0x4021C5: ph_thread (actions.c:83)
==860472==    by 0x4857646: mythread_wrapper (hg_intercepts.c:410)
==860472==    by 0x4910AC2: start_thread (pthread_create.c:442)
==860472==    by 0x49A1A03: clone (clone.S:100)
==860472== 
==860472== This conflicts with a previous read of size 4 by thread #2
==860472== Locks held: none
==860472==    at 0x401A80: ph_max_eat (philo.c:23)
==860472==    by 0x401AF7: ph_monitoring (philo.c:38)
==860472==    by 0x4857646: mythread_wrapper (hg_intercepts.c:410)
==860472==    by 0x4910AC2: start_thread (pthread_create.c:442)
==860472==    by 0x49A1A03: clone (clone.S:100)
==860472==  Address 0x4aa86e0 is 32 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472== ----------------------------------------------------------------
==860472== 
==860472==  Lock at 0x1FFEFFFD98 was first observed
==860472==    at 0x48590A7: pthread_mutex_init (hg_intercepts.c:822)
==860472==    by 0x4012DB: main (main.c:30)
==860472==  Address 0x1ffefffd98 is on thread #1's stack
==860472==  in frame #5, created by main (main.c:16)
==860472== 
==860472== Possible data race during read of size 8 at 0x4AA86C8 by thread #2
==860472== Locks held: none
==860472==    at 0x401B56: ph_monitoring (philo.c:43)
==860472==    by 0x4857646: mythread_wrapper (hg_intercepts.c:410)
==860472==    by 0x4910AC2: start_thread (pthread_create.c:442)
==860472==    by 0x49A1A03: clone (clone.S:100)
==860472== 
==860472== This conflicts with a previous write of size 8 by thread #1
==860472== Locks held: 1, at address 0x1FFEFFFD98
==860472==    at 0x4911117: pthread_create@@GLIBC_2.34 (pthread_create.c:747)
==860472==    by 0x485744E: pthread_create_WRK (hg_intercepts.c:449)
==860472==    by 0x4858D49: pthread_create@* (hg_intercepts.c:482)
==860472==    by 0x401D16: ph_start_philo (philo.c:79)
==860472==    by 0x401362: main (main.c:35)
==860472==  Address 0x4aa86c8 is 8 bytes inside a block of size 112 alloc'd
==860472==    at 0x484A893: malloc (vg_replace_malloc.c:446)
==860472==    by 0x40181C: make_philo (init_philo.c:17)
==860472==    by 0x40197E: init_philosophers (init_philo.c:39)
==860472==    by 0x401329: main (main.c:32)
==860472==  Block was alloc'd by thread #1
==860472== 
==860472== 
==860472== Use --history-level=approx or =none to gain increased speed, at
==860472== the cost of reduced accuracy of conflicting-access information
==860472== For lists of detected and suppressed errors, rerun with: -s
==860472== ERROR SUMMARY: 406112 errors from 4 contexts (suppressed: 30023 from 15)
